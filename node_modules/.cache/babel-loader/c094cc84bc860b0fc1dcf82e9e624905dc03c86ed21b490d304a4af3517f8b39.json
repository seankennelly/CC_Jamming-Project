{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Web_Development/IT Career Switch/codecademy/react/Jamming_Project/jamming/src/Components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Spotify } from \"../../util/Spotify/Spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    name: \"Example Track Name 1\",\n    artist: \"Example Track Artist 1\",\n    album: \"Example Track Album 1\",\n    id: 1\n  }, {\n    name: \"Example Track Name 2\",\n    artist: \"Example Track Artist 2\",\n    album: \"Example Track Album 2\",\n    id: 2\n  }]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([{\n    name: \"Example Playlist Name 1\",\n    artist: \"Example Playlist Artist 1\",\n    album: \"Example Playlist Album 1\",\n    id: 11\n  }, {\n    name: \"Example Playlist Name 2\",\n    artist: \"Example Playlist Artist 2\",\n    album: \"Example Playlist Album 2\",\n    id: 22\n  }, {\n    name: \"Example Playlist Name 3\",\n    artist: \"Example Playlist Artist 3\",\n    album: \"Example Playlist Album 3\",\n    id: 33\n  }]);\n  function addTrack(track) {\n    const existingTrack = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n  function removeTrack(track) {\n    const existingTrack = playlistTracks.filter(t => t.id !== track.id);\n    setPlaylistTracks(existingTrack);\n  }\n  function updatePlaylistName(name) {\n    setPlaylistName(name);\n  }\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map(t => t.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      updatePlaylistName(\"New Playlist\");\n      setPlaylistTracks([]);\n    });\n  }\n  function search(term) {\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.highlight,\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.App,\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"App-playlist\"],\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b84LIV3H0BZrO5yl0xyvqwPbJnc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","SearchResults","Playlist","SearchBar","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","existingTrack","find","t","newTrack","concat","console","log","removeTrack","filter","updatePlaylistName","savePlaylist","trackURIs","map","uri","then","search","term","result","children","className","highlight","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","userSearchResults","onAdd","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/Users/ken/Documents/Web_Development/IT Career Switch/codecademy/react/Jamming_Project/jamming/src/Components/App/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Spotify } from \"../../util/Spotify/Spotify\";\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([\n    {\n      name: \"Example Track Name 1\",\n      artist: \"Example Track Artist 1\",\n      album: \"Example Track Album 1\",\n      id: 1,\n    },\n    {\n      name: \"Example Track Name 2\",\n      artist: \"Example Track Artist 2\",\n      album: \"Example Track Album 2\",\n      id: 2,\n    },\n  ]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([\n    {\n      name: \"Example Playlist Name 1\",\n      artist: \"Example Playlist Artist 1\",\n      album: \"Example Playlist Album 1\",\n      id: 11,\n    },\n    {\n      name: \"Example Playlist Name 2\",\n      artist: \"Example Playlist Artist 2\",\n      album: \"Example Playlist Album 2\",\n      id: 22,\n    },\n    {\n      name: \"Example Playlist Name 3\",\n      artist: \"Example Playlist Artist 3\",\n      album: \"Example Playlist Album 3\",\n      id: 33,\n    },\n  ]);\n\n  function addTrack(track) {\n    const existingTrack = playlistTracks.find((t) => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n\n  function removeTrack(track) {\n    const existingTrack = playlistTracks.filter((t) => t.id !== track.id);\n    setPlaylistTracks(existingTrack);\n  }\n\n  function updatePlaylistName(name) {\n    setPlaylistName(name);\n  }\n\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map((t) => t.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      updatePlaylistName(\"New Playlist\");\n      setPlaylistTracks([]);\n    });\n  }\n\n  function search(term) {\n    Spotify.search(term).then((result) => setSearchResults(result));\n    console.log(term);\n  }\n\n  return (\n    <div>\n      <h1>\n        Ja<span className={styles.highlight}>mmm</span>ing\n      </h1>\n      <div className={styles.App}>\n        {/* <!-- Add a SearchBar component --> */}\n        <SearchBar onSearch={search} />\n\n        <div className={styles[\"App-playlist\"]}>\n          {/* <!-- Add a SearchResults component --> */}\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack} />\n          {/* passing searchResults state to the SearchResults component as userSearchResults */}\n\n          {/* <!-- Add a Playlist component --> */}\n          <Playlist\n            playlistName={playlistName}\n            playlistTracks={playlistTracks}\n            onRemove={removeTrack}\n            onNameChange={updatePlaylistName}\n            onSave={savePlaylist}\n          />\n          {/* passing playlistName & playlistTracks states to the Playlist component as userSearchResults */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}