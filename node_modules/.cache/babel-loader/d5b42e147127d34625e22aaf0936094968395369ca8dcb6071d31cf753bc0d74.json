{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Web_Development/IT Career Switch/codecademy/react/Jamming_Project/jamming/src/Components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userSearchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  function addTrack(track) {\n    const existingTrack = playlistTracks.find(savedTrack => savedTrack.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already in playlist!\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n  ;\n  function removeTrack(track) {\n    const filteredList = playlistTracks.filter(tracks => tracks.id !== track.id);\n    setPlaylistTracks(filteredList);\n  }\n  ;\n  function updatePlaylistName(name) {\n    setPlaylistName(name);\n  }\n  ;\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      updatePlaylistName('New Playlist');\n      setPlaylistTracks(\"\");\n    });\n  }\n  ;\n  function search(term) {\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: userSearchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rz/iR3LdNePTuKT5PI5LamyfMDw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchResults","Playlist","SearchBar","Spotify","jsxDEV","_jsxDEV","App","_s","userSearchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","existingTrack","find","savedTrack","id","newTrack","concat","console","log","removeTrack","filteredList","filter","tracks","updatePlaylistName","name","savePlaylist","trackURIs","map","uri","then","search","term","result","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAdd","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/Users/ken/Documents/Web_Development/IT Career Switch/codecademy/react/Jamming_Project/jamming/src/Components/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Spotify from '../../util/Spotify';\n\nfunction App() {\n  const [userSearchResults, setSearchResults] = useState([]);\n\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState(\n    [\n    ]\n  );\n\n  function addTrack(track) {\n    const existingTrack = playlistTracks.find((savedTrack) => savedTrack.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already in playlist!\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  };\n\n  function removeTrack(track) {\n    const filteredList = playlistTracks.filter((tracks) => \n      tracks.id !== track.id\n    );\n    setPlaylistTracks(filteredList);\n  };\n\n  function updatePlaylistName(name) {\n    setPlaylistName(name)\n  };\n\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      updatePlaylistName('New Playlist');\n      setPlaylistTracks(\"\");\n    });\n    \n  };\n\n  function search(term) {\n    Spotify.search(term).then((result) => setSearchResults(result));\n    console.log(term);\n  };\n\n  return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={search}/>\n        <div className=\"App-playlist\">\n\n          <SearchResults \n            userSearchResults={userSearchResults}\n            onAdd={addTrack}\n          />\n\n          <Playlist \n            playlistName={playlistName} \n            playlistTracks={playlistTracks}\n            onRemove={removeTrack}\n            onNameChange={updatePlaylistName}\n            onSave={savePlaylist}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}