{"ast":null,"code":"const clientId = \"8d1630484a144b1f8b60f6a0e3a40435\";\nconst redirectURI = \"http://localhost:3000/\";\nlet accessToken = \"\";\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n    ;\n    const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n    const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n    if (tokenInURL && expiryTime) {\n      // Check that index value is needed\n      accessToken = tokenInURL[1];\n      // Check that index value is needed\n      const expiresIn = Number(expiryTime[1]);\n\n      // Access token forced expiration\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    }\n    ;\n    const redirect = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modifypublic&redirect_uri=${redirectURI}`;\n    window.location = redirect;\n  },\n  search(term) {\n    accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(jsonResponse => {\n      if (!jsonResponse) {\n        console.error(\"Response error\");\n      }\n      return jsonResponse.tracks.items.map(t => ({\n        id: t.id,\n        name: t.name,\n        artist: t.artists[0].name,\n        album: t.album.name,\n        uri: t.uri\n      }));\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["clientId","redirectURI","accessToken","Spotify","getAccessToken","tokenInURL","window","location","href","match","expiryTime","expiresIn","Number","setTimeout","history","pushState","redirect","search","term","fetch","method","headers","Authorization","then","response","json","jsonResponse","console","error","tracks","items","map","t","id","name","artist","artists","album","uri"],"sources":["/Users/ken/Documents/Web_Development/IT Career Switch/codecademy/react/Jamming_Project/jamming/src/util/Spotify.js"],"sourcesContent":["const clientId = \"8d1630484a144b1f8b60f6a0e3a40435\";\nconst redirectURI = \"http://localhost:3000/\";\n\nlet accessToken = \"\";\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken\n    };\n\n    const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n    const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (tokenInURL && expiryTime) {\n      // Check that index value is needed\n      accessToken = tokenInURL[1];\n      // Check that index value is needed\n      const expiresIn = Number(expiryTime[1]);\n\n      // Access token forced expiration\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    };\n\n    const redirect = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modifypublic&redirect_uri=${redirectURI}`;\n    window.location = redirect;\n\n\n  },\n\n  search(term) {\n    accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${accessToken}` },\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        if (!jsonResponse) {\n          console.error(\"Response error\");\n        }\n        return jsonResponse.tracks.items.map((t) => ({\n          id: t.id,\n          name: t.name,\n          artist: t.artists[0].name,\n          album: t.album.name,\n          uri: t.uri,\n        }));\n      });\n    }\n\n\n\n};\n\nexport default Spotify;"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAG,wBAAwB;AAE5C,IAAIC,WAAW,GAAG,EAAE;AAEpB,MAAMC,OAAO,GAAG;EACdC,cAAcA,CAAA,EAAG;IACf,IAAIF,WAAW,EAAE;MACf,OAAOA,WAAW;IACpB;IAAC;IAED,MAAMG,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,sBAAsB,CAAC;IACrE,MAAMC,UAAU,GAAGJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAEnE,IAAIJ,UAAU,IAAIK,UAAU,EAAE;MAC5B;MACAR,WAAW,GAAGG,UAAU,CAAC,CAAC,CAAC;MAC3B;MACA,MAAMM,SAAS,GAAGC,MAAM,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC;;MAEvC;MACAJ,MAAM,CAACO,UAAU,CAAC,MAAMX,WAAW,GAAG,EAAE,EAAES,SAAS,GAAG,IAAI,CAAC;MAC3DL,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,cAAc,EAAE,IAAI,EAAE,GAAG,CAAC;MACnD,OAAOb,WAAW;IACpB;IAAC;IAED,MAAMc,QAAQ,GAAI,oDAAmDhB,QAAS,iEAAgEC,WAAY,EAAC;IAC3JK,MAAM,CAACC,QAAQ,GAAGS,QAAQ;EAG5B,CAAC;EAEDC,MAAMA,CAACC,IAAI,EAAE;IACXhB,WAAW,GAAGC,OAAO,CAACC,cAAc,CAAC,CAAC;IACtC,OAAOe,KAAK,CAAE,kDAAiDD,IAAK,EAAC,EAAE;MACrEE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASpB,WAAY;MAAE;IACpD,CAAC,CAAC,CACCqB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,YAAY,IAAK;MACtB,IAAI,CAACA,YAAY,EAAE;QACjBC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MACjC;MACA,OAAOF,YAAY,CAACG,MAAM,CAACC,KAAK,CAACC,GAAG,CAAEC,CAAC,KAAM;QAC3CC,EAAE,EAAED,CAAC,CAACC,EAAE;QACRC,IAAI,EAAEF,CAAC,CAACE,IAAI;QACZC,MAAM,EAAEH,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI;QACzBG,KAAK,EAAEL,CAAC,CAACK,KAAK,CAACH,IAAI;QACnBI,GAAG,EAAEN,CAAC,CAACM;MACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ;AAIJ,CAAC;AAED,eAAenC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}