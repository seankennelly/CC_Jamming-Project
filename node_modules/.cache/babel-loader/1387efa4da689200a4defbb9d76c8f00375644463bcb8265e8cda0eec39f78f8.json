{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Web_Development/IT Career Switch/codecademy/react/Jamming_Project/jamming/src/Components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    name: 'Tropical Storm (The Mud)',\n    artist: 'Kenny Erikson',\n    album: 'Once Bitten',\n    id: 1\n  }, {\n    name: \"Blue Glue (Feelin' Fine)\",\n    artist: 'Kenny Erikson',\n    album: 'Disastrous Living',\n    id: 2\n  }, {\n    name: \"Love Is Only A Feeling\",\n    artist: \"The Darkness\",\n    album: \"Permission To Land\",\n    id: 3\n  }]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([{\n    name: \"Example playlist name 1\",\n    artist: \"Example playlist artist 1\",\n    album: \"Example playlist album 1\",\n    id: 11\n  }]);\n  function addTrack(track) {\n    const existingTrack = playlistTracks.find(savedTrack => savedTrack.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already in playlist!\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n  ;\n  function removeTrack(track) {\n    const filteredList = playlistTracks.filter(tracks => tracks.id !== track.id);\n    setPlaylistTracks(filteredList);\n  }\n  ;\n  function updatePlaylistName(name) {\n    setPlaylistName(name);\n  }\n  ;\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map(track => track.uri);\n  }\n  ;\n  function search(searchTerm) {\n    Spotify.search(searchTerm).then(result);\n    console.log(searchTerm);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sIOpe9lXL98xO2/Z2fkjxUkZbsU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchResults","Playlist","SearchBar","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","existingTrack","find","savedTrack","newTrack","concat","console","log","removeTrack","filteredList","filter","tracks","updatePlaylistName","savePlaylist","trackURIs","map","uri","search","searchTerm","then","result","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","userSearchResults","onAdd","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/Users/ken/Documents/Web_Development/IT Career Switch/codecademy/react/Jamming_Project/jamming/src/Components/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Spotify from '../../util/Spotify';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState(\n    [\n      {\n        name: 'Tropical Storm (The Mud)',\n        artist: 'Kenny Erikson',\n        album: 'Once Bitten',\n        id: 1,\n      },\n      {\n        name: \"Blue Glue (Feelin' Fine)\",\n        artist: 'Kenny Erikson',\n        album: 'Disastrous Living',\n        id: 2,\n      },\n      {\n        name: \"Love Is Only A Feeling\",\n        artist: \"The Darkness\",\n        album: \"Permission To Land\",\n        id: 3,\n      },\n    ]\n  );\n\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState(\n    [\n      {\n        name: \"Example playlist name 1\",\n        artist: \"Example playlist artist 1\",\n        album: \"Example playlist album 1\",\n        id: 11,\n      },\n    ]\n  );\n\n  function addTrack(track) {\n    const existingTrack = playlistTracks.find((savedTrack) => savedTrack.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTrack) {\n      console.log(\"Track already in playlist!\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  };\n\n  function removeTrack(track) {\n    const filteredList = playlistTracks.filter((tracks) => \n      tracks.id !== track.id\n    );\n    setPlaylistTracks(filteredList);\n  };\n\n  function updatePlaylistName(name) {\n    setPlaylistName(name)\n  };\n\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map((track) => track.uri);\n  };\n\n  function search(searchTerm) {\n    Spotify.search(searchTerm).then((result))\n    console.log(searchTerm)\n  };\n\n  return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={search}/>\n        <div className=\"App-playlist\">\n\n          <SearchResults \n            userSearchResults={searchResults}\n            onAdd={addTrack}\n          />\n\n          <Playlist \n            playlistName={playlistName} \n            playlistTracks={playlistTracks}\n            onRemove={removeTrack}\n            onNameChange={updatePlaylistName}\n            onSave={savePlaylist}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}